{"version":3,"sources":["components/chaos/ChaosFormSettings.js","components/Constants.js","components/chaos/ChaosInfoPopper.js","components/chaos/KillAppForm.js","components/chaos/ExceptionForm.js","components/chaos/MemoryForm.js","components/chaos/LatencyForm.js","components/ChaosMonkey.js","contexts/AppContext.js","components/Dashboard.js","components/HealthCheck.js","components/ServerInfo.js","components/LoggerConfig.js","components/ErrorMessage.js","services/user.js","components/Login.js","components/Header.js","components/Form.js","components/Failure.js","components/Success.js","App.js","reportWebVitals.js","index.js"],"names":["ChaosFormSettings","props","label","value","options","optionDisplays","elementOptions","i","length","push","MenuItem","FormGroup","InputLabel","Select","variant","fullWidth","margin","onChange","val","target","useStyles","makeStyles","theme","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","submit","loginButtons","ChaosInfoPopper","formType","useState","popperAnchor","setPopperAnchor","popperOpen","setPopperOpen","handlerName","id","Boolean","undefined","description","Fragment","IconButton","onClick","event","currentTarget","previousOpenState","aria-describedby","style","padding","color","Popper","open","placement","anchorEl","transition","TransitionProps","Fade","timeout","Box","sx","border","p","bgcolor","KillAppForm","classes","address","port","protocol","assaultType","endpoint","setEndpoint","requests","setRequests","config","enabled","setEnabled","bypass","setBypass","level","setLevel","formTitle","Grid","item","xs","TextField","type","e","disabled","inputProps","readOnly","row","FormControlLabel","control","Switch","defaultChecked","defaultValue","required","CssBaseline","className","noValidate","onSubmit","preventDefault","url","data","headers","localStorage","getItem","URL","baseUrl","JSON","stringify","fetch","method","then","response","status","window","location","reload","console","log","catch","err","Paper","container","justifyContent","direction","Typography","component","align","gutterBottom","Button","ExeptionForm","MemoryForm","memoryMillisecondsHoldFilledMemory","setMemoryMillisecondsHoldFilledMemory","memoryMillisecondsWaitNextIncrease","setMemoryMillisecondsWaitNextIncrease","memoryFillIncrementFraction","setMemoryFillIncrementFraction","memoryFillTargetFraction","setMemoryFillTargetFraction","latencyRangeStart","setLatencyRangeStart","latencyRangeEnd","setLatencyRangeEnd","ChaosMonkey","history","state","chaosFormType","setChaosMonkeyFormType","chaosAssaultType","setChaosMonkeyAssaultType","chaosMonkeyGetData","setChaosMonkeyGetData","error","setError","loading","setLoading","params","Object","keys","forEach","key","searchParams","append","activeForm","useEffect","abortController","AbortController","a","signal","ok","json","code","pathname","from","aborted","fetchData","abort","CircularProgress","newVal","AppStateContext","React","createContext","AppDispatchContext","appReducer","action","filter","toLowerCase","Error","AppProvider","children","useReducer","dispatch","Provider","useRowStyles","root","borderBottom","Row","nodes","setOpen","words","split","serviceId","tag","TableRow","TableCell","aria-label","size","scope","paddingBottom","paddingTop","colSpan","Collapse","in","unmountOnExit","Table","TableHead","TableBody","map","node","j","k","handleCheck","originUrl","host","fullNode","handleInfo","handleLogger","handleChaosMonkey","Dashboard","wait","services","setServices","serviceIds","context","useContext","useAppState","filteredServiceIds","includes","TableContainer","HealthCheck","check","setCheck","ServerInfo","info","setInfo","table","minWidth","LoggerConfig","loggers","setLoggers","logger","name","ErrorMessage","dangerouslySetInnerHTML","__html","userService","login","username","password","authdata","btoa","setItem","logout","removeItem","Login","setUsername","setPassword","Container","maxWidth","Avatar","autoComplete","autoFocus","grow","flexGrow","menuButton","marginRight","title","breakpoints","up","link","textDecoration","search","position","borderRadius","shape","alpha","marginLeft","searchIcon","height","pointerEvents","inputRoot","inputInput","paddingLeft","transitions","create","sectionDesktop","sectionMobile","Header","useHistory","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","appDispatch","useAppDispatch","handleProfileMenuOpen","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","mobileMenuId","renderMobileMenu","aria-controls","aria-haspopup","AppBar","Toolbar","edge","to","noWrap","InputBase","placeholder","input","withStyles","flexWrap","formControl","selectEmpty","progress","button","fetching","setFetching","showErrors","setShowErrors","schema","setSchema","setForm","actions","setActions","model","setModel","mapper","RcSelect","match","formId","formData","forms","submitForm","assign","rest","credentials","text","s","parse","success","failure","buttons","index","validationResult","utils","validateBySchema","valid","path","onButtonClick","onModelChange","selectOrSet","Failure","Success","App","exact","Form","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f67f4120.chunk.js","sourcesContent":["import React from \"react\";\nimport FormGroup from '@material-ui/core/FormGroup';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\nexport default function ChaosFormSettings(props) {\n  const label = props.label\n  const value = props.value;\n  const options = props.options;\n  const optionDisplays = props.optionDisplays;\n\n  const elementOptions = [];\n\n  for(var i = 0; i < options.length; i++) {\n    elementOptions.push(<MenuItem value={options[i]}>{optionDisplays[i]}</MenuItem>)\n  }\n\n  const handleChange = (val) => {\n    props.onChange(val.target.value);\n  }\n\n  return(\n      <FormGroup>\n        <InputLabel>{label}</InputLabel>\n        <Select\n          variant=\"outlined\"\n          fullWidth\n          margin=\"normal\"\n          value={value}\n          label={label}\n          onChange={handleChange}\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          {elementOptions}\n      </Select>\n      </FormGroup>\n  )\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    '@global': {\n        body: {\n            backgroundColor: theme.palette.common.white,\n        },\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    loginButtons: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    }\n}));\n\nexport { useStyles }\n","import React, { useState } from \"react\";\nimport Popper from '@material-ui/core/Popper';\nimport Box from '@material-ui/core/Box';\nimport Fade from '@material-ui/core/Fade';\nimport HelpIcon from '@material-ui/icons/Help';\nimport IconButton from '@material-ui/core/IconButton'\n\nexport default function ChaosInfoPopper(props) {\n  const formType = props.formType;\n  const [popperAnchor, setPopperAnchor] = useState(null);\n  const [popperOpen, setPopperOpen] = useState(false);\n  const handlerName = props.handlerName\n\n  const handleClick = (event) => {\n    setPopperAnchor(event.currentTarget);\n    setPopperOpen((previousOpenState) => !previousOpenState);\n  }\n\n  const canBeOpen = popperOpen && Boolean(popperAnchor);\n  const id = canBeOpen ? 'transition-popper' : undefined;\n  let description = \"Unknown form type!\"\n\n  if(formType === \"initAssault\") {\n    description = (\n      <div>\n        <p>Enter an endpoint for your api, and enter in the number of requests you want to try.</p>\n        <p>Pressing 'Start' will trigger the chaos monkey assault on your service.</p>\n      </div>\n    );\n  } else if(formType === \"configAssault\") {\n    description = (\n      <div>\n        <p>Configure the {handlerName} config on your service.</p>\n        <ul>\n          <li>'Enabled' is to enable/disable the Exception Assault handler on your service.</li>\n          <li>'Bypass' is to set whether or not the request will go through the {handlerName} ({handlerName} also has to be set to 'enabled').</li>\n          <li>'Level' is the frequency of your app being attacked on requests.</li>\n        </ul>\n        <p>Pressing 'Go' will send the config request to your service</p>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <IconButton\n        onClick={handleClick}\n        aria-describedby={id}\n        style={{padding: 5}}\n        color=\"primary\"\n        >\n        <HelpIcon />\n      </IconButton>\n      <Popper\n        id={id}\n        open={popperOpen}\n        placement=\"right-start\"\n        anchorEl={popperAnchor}\n        transition\n        >\n        {({TransitionProps}) => (\n          <Fade {...TransitionProps} timeout={350}>\n            <Box sx={{ border: 1, p: 1, bgcolor: 'background.paper' }}>\n            {description}\n            </Box>\n          </Fade>\n        )}\n      </Popper>\n    </React.Fragment>\n  )\n}\n","import React, { useState } from \"react\";\nimport { useStyles } from '../Constants'\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Switch from '@material-ui/core/Switch';\nimport ChaosInfoPopper from './ChaosInfoPopper'\nimport Typography from '@material-ui/core/Typography';\n\nexport default function KillAppForm(props) {\n  const classes = useStyles();\n  const formType = props.formType;\n  const address = props.address;\n  const port = props.port;\n  const protocol = props.protocol;\n  const assaultType = \"com.networknt.chaos.KillappAssaultHandler\";\n\n  const [endpoint, setEndpoint] = useState();\n  const [requests, setRequests] = useState();\n\n  const [enabled, setEnabled] = useState(props.config[\"enabled\"]);\n  const [bypass, setBypass] = useState(props.config[\"bypass\"]);\n  const [level, setLevel] = useState(props.config[\"level\"]);\n\n  const handleEndpointChange = (e) => {\n    setEndpoint(e.target.value);\n  }\n\n  const handleChangeRequests = (e) => {\n    setRequests(e.target.value);\n  }\n\n  const handleEnabledChange = (e) => {\n    setEnabled(e.target.value);\n  }\n\n  const handleBypassChange = (e) => {\n    setBypass(e.target.value);\n  }\n\n  const handleLevelChange = (e) => {\n    setLevel(e.target.value);\n  }\n\n  const handleKillAppSubmit = (event) => {\n    event.preventDefault();\n    var headers = {\n      'Authorization': 'Basic ' + localStorage.getItem('user'),\n      'Content-Type': 'application/json'\n    }\n    let url;\n    let data;\n    if(formType === \"initAssault\") {\n      url = new URL(props.baseUrl + '/services/chaosmonkey/assault')\n      data = JSON.stringify({\n        \"protocol\": protocol,\n        \"address\": address,\n        \"assaultType\": assaultType,\n        \"port\": port,\n        \"endpoint\": endpoint,\n        \"requests\": requests\n      });\n    } else if(formType === \"configAssault\") {\n      url = new URL(props.baseUrl + '/services/chaosmonkey');\n      data = JSON.stringify({\n        \"protocol\": protocol,\n        \"port\": port,\n        \"address\": address,\n        \"assaultType\": assaultType,\n        \"assaultConfig\": {\n          \"enabled\": enabled,\n          \"bypass\": bypass,\n          \"level\": level,\n        }\n      });\n    }\n    return fetch(url, {\n      method: 'POST',\n      body: data,\n      headers: headers\n    }).then(response => {\n      if(response.status >= 200 && response.status < 300) {\n        window.location.reload();\n      } else {\n        console.log(\"something went wrong\");\n      }\n    }).catch(err => err);\n  }\n\n  let formTitle = \"\";\n  let form = (\n    <div></div>\n  )\n\n  if(formType === \"initAssault\") {\n    formTitle = \"Trigger\"\n    form = (\n        <React.Fragment>\n              <Grid item xs={6}>\n                <TextField\n                  type=\"text\"\n                  fullWidth\n                  onChange={handleEndpointChange}\n                  variant=\"outlined\"\n                  label=\"endpoint\"\n                  margin=\"normal\"\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  type=\"number\"\n                  onChange={handleChangeRequests}\n                  fullWidth\n                  variant=\"outlined\"\n                  label=\"requests\"\n                  margin=\"normal\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  type=\"text\"\n                  variant=\"filled\"\n                  fullWidth\n                  label=\"assaultType\"\n                  disabled\n                  value={assaultType}\n                  inputProps={\n                    { readOnly: true, }\n                  }\n                  margin=\"normal\"\n                />\n              </Grid>\n              <Grid item xs={4}>\n                <TextField\n                  type=\"text\"\n                  variant=\"filled\"\n                  label=\"protcol\"\n                  fullWidth\n                  value={protocol}\n                  disabled\n                  inputProps={\n                    { readOnly: true, }\n                  }\n                  margin=\"normal\"\n                />\n              </Grid>\n              <Grid item xs={4}>\n                <TextField\n                  type=\"text\"\n                  variant=\"filled\"\n                  label=\"address\"\n                  fullWidth\n                  disabled\n                  value={address}\n                  inputProps={\n                    { readOnly: true, }\n                  }\n                  margin=\"normal\"\n                />\n                </Grid>\n                <Grid item xs={4}>\n                <TextField\n                  type=\"text\"\n                  variant=\"filled\"\n                  label=\"port\"\n                  fullWidth\n                  disabled\n                  value={port}\n                  inputProps={\n                    { readOnly: true, }\n                  }\n                  margin=\"normal\"\n                />\n              </Grid>\n            </React.Fragment>\n    )\n  } else if(formType === \"configAssault\") {\n    formTitle = \"Configuration\";\n    form = (\n      <React.Fragment>\n        <Grid item xs={8}>\n          <FormGroup row>\n            <FormControlLabel control={<Switch onChange={handleEnabledChange} defaultChecked={props.config[\"enabled\"]} color=\"primary\"/>} label=\"Enabled\" />\n            <FormControlLabel control={<Switch onChange={handleBypassChange} defaultChecked={props.config[\"bypass\"]} color=\"primary\"/>} label=\"Bypass\" />\n          </FormGroup>\n        </Grid>\n        <Grid item xs={4}>\n        <TextField\n          type=\"number\"\n          variant=\"outlined\"\n          onChange={handleLevelChange}\n          fullWidth\n          defaultValue={props.config[\"level\"]}\n          required\n          label=\"Level\"\n          margin=\"normal\"\n        />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            type=\"text\"\n            variant=\"filled\"\n            fullWidth\n            label=\"assaultType\"\n            value={assaultType}\n            disabled\n            inputProps={\n              { readOnly: true, }\n            }\n            margin=\"normal\"\n          />\n        </Grid>\n        <Grid item xs={4}>\n          <TextField\n            type=\"text\"\n            variant=\"filled\"\n            label=\"protcol\"\n            fullWidth\n            disabled\n            value={protocol}\n            inputProps={\n              { readOnly: true, }\n            }\n            margin=\"normal\"\n          />\n        </Grid>\n        <Grid item xs={4}>\n          <TextField\n            type=\"text\"\n            variant=\"filled\"\n            label=\"address\"\n            fullWidth\n            disabled\n            value={address}\n            inputProps={\n              { readOnly: true, }\n            }\n            margin=\"normal\"\n          />\n          </Grid>\n          <Grid item xs={4}>\n          <TextField\n            type=\"text\"\n            variant=\"filled\"\n            label=\"port\"\n            disabled\n            fullWidth\n            value={port}\n            inputProps={\n              { readOnly: true, }\n            }\n            margin=\"normal\"\n          />\n        </Grid>\n      </React.Fragment>\n  )\n  }\n  let nullForm = Boolean(assaultType === \"\" || formType === \"\");\n  if(!nullForm) {\n    return (\n      <div>\n      <CssBaseline />\n      <form className={classes.form} noValidate onSubmit={handleKillAppSubmit}>\n        <Paper style={{padding: 16}}>\n          <Grid\n            container\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            spacing={2}\n            direction=\"row\">\n            <Grid item xs={12} style={{padding: 0, margin: 0}}>\n              <Typography variant=\"h4\" component=\"h1\" align=\"left\" gutterBottom>\n                KillApp Assault {formTitle} Form\n                <ChaosInfoPopper\n                formType={formType}\n                handlerName=\"KillApp Assault Handler\"\n                />\n              </Typography>\n            </Grid>\n            {form}\n            <Grid item xs={3}>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n                >Go\n            </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n        </form>\n      </div>\n    );\n  } else {\n    return (<div></div>);\n  }\n\n}\n","import React, { useState } from \"react\";\nimport { useStyles } from '../Constants'\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Switch from '@material-ui/core/Switch';\nimport ChaosInfoPopper from './ChaosInfoPopper';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function ExeptionForm(props) {\n  const classes = useStyles();\n  const formType = props.formType;\n  const address = props.address;\n  const port = props.port;\n  const protocol = props.protocol;\n  const assaultType = \"com.networknt.chaos.ExceptionAssaultHandler\";\n\n  const [endpoint, setEndpoint] = useState();\n  const [requests, setRequests] = useState();\n\n  const [enabled, setEnabled] = useState(props.config[\"enabled\"]);\n  const [bypass, setBypass] = useState(props.config[\"bypass\"]);\n  const [level, setLevel] = useState(props.config[\"level\"]);\n\n  const handleEndpointChange = (e) => {\n    setEndpoint(e.target.value);\n  }\n\n  const handleChangeRequests = (e) => {\n    setRequests(e.target.value);\n  }\n\n  const handleEnabledChange = (e) => {\n    setEnabled(e.target.value);\n  }\n\n  const handleBypassChange = (e) => {\n    setBypass(e.target.value);\n  }\n\n  const handleLevelChange = (e) => {\n    setLevel(e.target.value);\n  }\n\n  const handleExceptionSubmit = (event) => {\n    event.preventDefault();\n    var headers = {\n      'Authorization': 'Basic ' + localStorage.getItem('user'),\n      'Content-Type': 'application/json'\n    }\n    let url;\n    let data;\n    if(formType === \"initAssault\") {\n      url = new URL(props.baseUrl + '/services/chaosmonkey/assault')\n      data = JSON.stringify({\n        \"protocol\": protocol,\n        \"address\": address,\n        \"assaultType\": assaultType,\n        \"port\": port,\n        \"endpoint\": endpoint,\n        \"requests\": requests\n      });\n    } else if(formType === \"configAssault\") {\n      url = new URL(props.baseUrl + '/services/chaosmonkey');\n      data = JSON.stringify({\n        \"protocol\": protocol,\n        \"port\": port,\n        \"address\": address,\n        \"assaultType\": assaultType,\n        \"assaultConfig\": {\n          \"enabled\": enabled,\n          \"bypass\": bypass,\n          \"level\": level,\n        }\n      });\n    }\n    return fetch(url, {\n      method: 'POST',\n      body: data,\n      headers: headers\n    }).then(response => {\n      if(response.status >= 200 && response.status < 300) {\n        window.location.reload();\n      } else {\n        console.log(\"something went wrong\");\n      }\n    }).catch(err => err);\n  }\n\n  let formTitle = \"\";\n  let form = (\n    <div></div>\n  )\n\n  if(formType === \"initAssault\") {\n    formTitle = \"Trigger\"\n    form = (\n        <React.Fragment>\n              <Grid item xs={6}>\n                <TextField\n                  type=\"text\"\n                  fullWidth\n                  onChange={handleEndpointChange}\n                  variant=\"outlined\"\n                  label=\"endpoint\"\n                  margin=\"normal\"\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  type=\"number\"\n                  onChange={handleChangeRequests}\n                  fullWidth\n                  variant=\"outlined\"\n                  label=\"requests\"\n                  margin=\"normal\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  type=\"text\"\n                  variant=\"filled\"\n                  fullWidth\n                  label=\"assaultType\"\n                  disabled\n                  value={assaultType}\n                  inputProps={\n                    { readOnly: true, }\n                  }\n                  margin=\"normal\"\n                />\n              </Grid>\n              <Grid item xs={4}>\n                <TextField\n                  type=\"text\"\n                  variant=\"filled\"\n                  label=\"protcol\"\n                  fullWidth\n                  value={protocol}\n                  disabled\n                  inputProps={\n                    { readOnly: true, }\n                  }\n                  margin=\"normal\"\n                />\n              </Grid>\n              <Grid item xs={4}>\n                <TextField\n                  type=\"text\"\n                  variant=\"filled\"\n                  label=\"address\"\n                  fullWidth\n                  disabled\n                  value={address}\n                  inputProps={\n                    { readOnly: true, }\n                  }\n                  margin=\"normal\"\n                />\n                </Grid>\n                <Grid item xs={4}>\n                <TextField\n                  type=\"text\"\n                  variant=\"filled\"\n                  label=\"port\"\n                  fullWidth\n                  disabled\n                  value={port}\n                  inputProps={\n                    { readOnly: true, }\n                  }\n                  margin=\"normal\"\n                />\n              </Grid>\n            </React.Fragment>\n    )\n  } else if(formType === \"configAssault\") {\n    formTitle = \"Configuration\";\n    form = (\n      <React.Fragment>\n        <Grid item xs={8}>\n          <FormGroup row>\n            <FormControlLabel control={<Switch onChange={handleEnabledChange} defaultChecked={props.config[\"enabled\"]} color=\"primary\"/>} label=\"Enabled\" />\n            <FormControlLabel control={<Switch onChange={handleBypassChange} defaultChecked={props.config[\"bypass\"]} color=\"primary\"/>} label=\"Bypass\" />\n          </FormGroup>\n        </Grid>\n        <Grid item xs={4}>\n        <TextField\n          type=\"number\"\n          variant=\"outlined\"\n          onChange={handleLevelChange}\n          defaultValue={props.config[\"level\"]}\n          fullWidth\n          required\n          label=\"Level\"\n          margin=\"normal\"\n        />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            type=\"text\"\n            variant=\"filled\"\n            fullWidth\n            label=\"assaultType\"\n            value={assaultType}\n            disabled\n            inputProps={\n              { readOnly: true, }\n            }\n            margin=\"normal\"\n          />\n        </Grid>\n        <Grid item xs={4}>\n          <TextField\n            type=\"text\"\n            variant=\"filled\"\n            label=\"protcol\"\n            fullWidth\n            disabled\n            value={protocol}\n            inputProps={\n              { readOnly: true, }\n            }\n            margin=\"normal\"\n          />\n        </Grid>\n        <Grid item xs={4}>\n          <TextField\n            type=\"text\"\n            variant=\"filled\"\n            label=\"address\"\n            fullWidth\n            disabled\n            value={address}\n            inputProps={\n              { readOnly: true, }\n            }\n            margin=\"normal\"\n          />\n          </Grid>\n          <Grid item xs={4}>\n          <TextField\n            type=\"text\"\n            variant=\"filled\"\n            label=\"port\"\n            disabled\n            fullWidth\n            value={port}\n            inputProps={\n              { readOnly: true, }\n            }\n            margin=\"normal\"\n          />\n        </Grid>\n      </React.Fragment>\n  )\n  }\n  let nullForm = Boolean(assaultType === \"\" || formType === \"\");\n  if(!nullForm) {\n    return (\n      <div>\n      <CssBaseline />\n      <form className={classes.form} noValidate onSubmit={handleExceptionSubmit}>\n        <Paper style={{padding: 16}}>\n          <Grid\n            container\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            spacing={2}\n            direction=\"row\">\n            <Grid item xs={12} style={{padding: 0, margin: 0}}>\n              <Typography variant=\"h4\" component=\"h1\" align=\"left\" gutterBottom>\n                Exception Assault {formTitle} Form\n                <ChaosInfoPopper\n                formType={formType}\n                handlerName=\"Exception Assault Handler\"\n                />\n              </Typography>\n            </Grid>\n            {form}\n            <Grid item xs={3}>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n                >Go\n            </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n        </form>\n      </div>\n  )\n  } else {\n    return (<div></div>)\n  }\n}\n","import React, { useState } from \"react\";\nimport { useStyles } from '../Constants'\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Switch from '@material-ui/core/Switch';\nimport ChaosInfoPopper from './ChaosInfoPopper';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function MemoryForm(props) {\n  const classes = useStyles();\n  const formType = props.formType;\n  const address = props.address;\n  const port = props.port;\n  const protocol = props.protocol;\n  const assaultType = \"com.networknt.chaos.MemoryAssaultHandler\";\n  let formTitle = \"\";\n\n  const [endpoint, setEndpoint] = useState();\n  const [requests, setRequests] = useState();\n\n  const [enabled, setEnabled] = useState(props.config[\"enabled\"]);\n  const [bypass, setBypass] = useState(props.config[\"bypass\"]);\n  const [level, setLevel] = useState(props.config[\"level\"]);\n  const [memoryMillisecondsHoldFilledMemory, setMemoryMillisecondsHoldFilledMemory] = useState(props.config[\"memoryMillisecondsHoldFilledMemory\"]);\n  const [memoryMillisecondsWaitNextIncrease, setMemoryMillisecondsWaitNextIncrease] = useState(props.config[\"memoryMillisecondsWaitNextIncrease\"]);\n  const [memoryFillIncrementFraction, setMemoryFillIncrementFraction] = useState(props.config[\"memoryFillIncrementFraction\"]);\n  const [memoryFillTargetFraction, setMemoryFillTargetFraction] = useState(props.config[\"memoryFillTargetFraction\"]);\n\n  const handleEnabledChange = (e) => {\n    setEnabled(e.target.value);\n  }\n\n  const handleBypassChange = (e) => {\n    setBypass(e.target.value);\n  }\n\n  const handleLevelChange = (e) => {\n    setLevel(e.target.value);\n  }\n\n  const handleMemoryMillisecondsHoldFilledMemoryChange = (e) => {\n    setMemoryMillisecondsHoldFilledMemory(e.target.value);\n  }\n\n  const handleMemoryMillisecondsWaitNextIncreaseChange = (e) => {\n    setMemoryMillisecondsWaitNextIncrease(e.target.value);\n  }\n\n  const handleMemoryFillIncrementFractionChange = (e) => {\n    setMemoryFillIncrementFraction(e.target.value);\n  }\n\n  const handleMemoryFillTargetFractionChange = (e) => {\n    setMemoryFillTargetFraction(e.target.value);\n  }\n\n  const handleEndpointChange = (e) => {\n    setEndpoint(e.target.value);\n  }\n\n  const handleChangeRequests = (e) => {\n    setRequests(e.target.value);\n  }\n\n  const handleMemorySubmit = (event) => {\n    console.log('submit memory')\n    event.preventDefault();\n    var headers = {\n      'Authorization': 'Basic ' + localStorage.getItem('user'),\n      'Content-Type': 'application/json'\n    }\n    let url;\n    let data;\n    if(formType === \"initAssault\") {\n      url = new URL(props.baseUrl + '/services/chaosmonkey/assault')\n      data = JSON.stringify({\n        \"protocol\": protocol,\n        \"address\": address,\n        \"assaultType\": assaultType,\n        \"port\": port,\n        \"endpoint\": endpoint,\n        \"requests\": requests\n      });\n    } else if(formType === \"configAssault\") {\n      url = new URL(props.baseUrl + '/services/chaosmonkey');\n      data = JSON.stringify({\n        \"protocol\": protocol,\n        \"port\": port,\n        \"address\": address,\n        \"assaultType\": assaultType,\n        \"assaultConfig\": {\n          \"enabled\": enabled,\n          \"bypass\": bypass,\n          \"level\": level,\n          \"memoryMillisecondsHoldFilledMemory\": memoryMillisecondsHoldFilledMemory,\n          \"memoryMillisecondsWaitNextIncrease\": memoryMillisecondsWaitNextIncrease,\n          \"memoryFillIncrementFraction\": memoryFillIncrementFraction,\n          \"memoryFillTargetFraction\": memoryFillTargetFraction,\n        }\n      });\n    }\n\n    return fetch(url, {\n      method: 'POST',\n      body: data,\n      headers: headers\n    }).then(response => {\n      if(response.status >= 200 && response.status < 300) {\n        window.location.reload();\n      } else {\n        console.log(\"something went wrong\");\n      }\n    }).catch(err => err);\n  }\n\n  let form = (\n    <div></div>\n  )\n\n  if(formType === \"initAssault\") {\n    formTitle = \"Trigger\";\n    form = (\n        <React.Fragment>\n              <Grid item xs={6}>\n                <TextField\n                  type=\"text\"\n                  fullWidth\n                  variant=\"outlined\"\n                  label=\"endpoint\"\n                  onChange={handleEndpointChange}\n                  margin=\"normal\"\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  type=\"number\"\n                  fullWidth\n                  variant=\"outlined\"\n                  label=\"requests\"\n                  onChange={handleChangeRequests}\n                  margin=\"normal\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  type=\"text\"\n                  variant=\"filled\"\n                  fullWidth\n                  label=\"assaultType\"\n                  disabled\n                  value={assaultType}\n                  inputProps={\n                    { readOnly: true, }\n                  }\n                  margin=\"normal\"\n                />\n              </Grid>\n              <Grid item xs={4}>\n                <TextField\n                  type=\"text\"\n                  variant=\"filled\"\n                  label=\"protcol\"\n                  fullWidth\n                  value={protocol}\n                  disabled\n                  inputProps={\n                    { readOnly: true, }\n                  }\n                  margin=\"normal\"\n                />\n              </Grid>\n              <Grid item xs={4}>\n                <TextField\n                  type=\"text\"\n                  variant=\"filled\"\n                  label=\"address\"\n                  fullWidth\n                  disabled\n                  value={address}\n                  inputProps={\n                    { readOnly: true, }\n                  }\n                  margin=\"normal\"\n                />\n                </Grid>\n                <Grid item xs={4}>\n                <TextField\n                  type=\"text\"\n                  variant=\"filled\"\n                  label=\"port\"\n                  fullWidth\n                  disabled\n                  value={port}\n                  inputProps={\n                    { readOnly: true, }\n                  }\n                  margin=\"normal\"\n                />\n              </Grid>\n            </React.Fragment>\n    )\n  } else if(formType === \"configAssault\") {\n    formTitle = \"Configuration\";\n    form = (\n      <React.Fragment>\n        <Grid item xs={4}>\n          <FormGroup row>\n            <FormControlLabel control={<Switch onChange={handleEnabledChange} defaultChecked={props.config[\"enabled\"]} color=\"primary\"/>} label=\"Enabled\" />\n            <FormControlLabel control={<Switch onChange={handleBypassChange} defaultChecked={props.config[\"bypass\"]} color=\"primary\"/>} label=\"Bypass\" />\n          </FormGroup>\n        </Grid>\n        <Grid item xs={4}>\n        <TextField\n          type=\"number\"\n          variant=\"outlined\"\n          fullWidth\n          required\n          defaultValue={props.config[\"level\"]}\n          onChange={handleLevelChange}\n          label=\"Level\"\n          margin=\"normal\"\n        />\n        </Grid>\n        <Grid item xs={4}>\n          <TextField\n            type=\"number\"\n            variant=\"outlined\"\n            fullWidth\n            defaultValue={props.config[\"memoryMillisecondsHoldFilledMemory\"]}\n            onChange={handleMemoryMillisecondsHoldFilledMemoryChange}\n            required\n            label=\"MillisecondsHoldFilledMemory\"\n            margin=\"normal\"\n          />\n        </Grid>\n        <Grid item xs={4}>\n          <TextField\n            type=\"number\"\n            variant=\"outlined\"\n            fullWidth\n            required\n            defaultValue={props.config[\"memoryMillisecondsWaitNextIncrease\"]}\n            onChange={handleMemoryMillisecondsWaitNextIncreaseChange}\n            label=\"MillisecondsWaitNextIncrease\"\n            margin=\"normal\"\n          />\n        </Grid>\n        <Grid item xs={4}>\n          <TextField\n            type=\"number\"\n            variant=\"outlined\"\n            fullWidth\n            defaultValue={props.config[\"memoryFillIncrementFraction\"]}\n            onChange={handleMemoryFillIncrementFractionChange}\n            required\n            label=\"FillIncrementFraction\"\n            margin=\"normal\"\n          />\n        </Grid>\n        <Grid item xs={4}>\n          <TextField\n            type=\"number\"\n            variant=\"outlined\"\n            fullWidth\n            onChange={handleMemoryFillTargetFractionChange}\n            defaultValue={props.config[\"memoryFillTargetFraction\"]}\n            required\n            label=\"FillTargetFraction\"\n            margin=\"normal\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            type=\"text\"\n            variant=\"filled\"\n            fullWidth\n            label=\"assaultType\"\n            value={assaultType}\n            disabled\n            inputProps={\n              { readOnly: true, }\n            }\n            margin=\"normal\"\n          />\n        </Grid>\n        <Grid item xs={4}>\n          <TextField\n            type=\"text\"\n            variant=\"filled\"\n            label=\"protcol\"\n            fullWidth\n            disabled\n            value={protocol}\n            inputProps={\n              { readOnly: true, }\n            }\n            margin=\"normal\"\n          />\n        </Grid>\n        <Grid item xs={4}>\n          <TextField\n            type=\"text\"\n            variant=\"filled\"\n            label=\"address\"\n            fullWidth\n            disabled\n            value={address}\n            inputProps={\n              { readOnly: true, }\n            }\n            margin=\"normal\"\n          />\n          </Grid>\n          <Grid item xs={4}>\n          <TextField\n            type=\"text\"\n            variant=\"filled\"\n            label=\"port\"\n            disabled\n            fullWidth\n            value={port}\n            inputProps={\n              { readOnly: true, }\n            }\n            margin=\"normal\"\n          />\n        </Grid>\n      </React.Fragment>\n  )\n  }\n  let nullForm = Boolean(assaultType === \"\" || formType === \"\");\n  if(!nullForm) {\n    return (\n      <div>\n        <CssBaseline />\n        <form className={classes.form} noValidate onSubmit={handleMemorySubmit}>\n          <Paper style={{padding: 16}}>\n            <Grid\n              container\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              spacing={2}\n              direction=\"row\">\n              <Grid item xs={12} style={{padding: 0, margin: 0}}>\n              <Typography variant=\"h4\" component=\"h1\" align=\"left\" gutterBottom>\n                Memory Assault {formTitle} Form\n                <ChaosInfoPopper\n                formType={formType}\n                handlerName=\"Memory Assault Handler\"\n                />\n              </Typography>\n              </Grid>\n              {form}\n              <Grid item xs={3}>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                  >Go\n              </Button>\n              </Grid>\n            </Grid>\n          </Paper>\n          </form>\n        </div>\n    )\n  } else {\n    return(<div></div>)\n  }\n\n}\n","import React, { useState } from \"react\";\nimport { useStyles } from '../Constants'\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Switch from '@material-ui/core/Switch';\nimport ChaosInfoPopper from './ChaosInfoPopper';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function MemoryForm(props) {\n  const classes = useStyles();\n  const formType = props.formType;\n  const address = props.address;\n  const port = props.port;\n  const protocol = props.protocol;\n  const assaultType = \"com.networknt.chaos.LatencyAssaultHandler\";\n\n  const [endpoint, setEndpoint] = useState();\n  const [requests, setRequests] = useState();\n\n  const [enabled, setEnabled] = useState(props.config[\"enabled\"]);\n  const [bypass, setBypass] = useState(props.config[\"bypass\"]);\n  const [level, setLevel] = useState(props.config[\"level\"]);\n  const [latencyRangeStart, setLatencyRangeStart] = useState(props.config[\"latencyRangeStart\"]);\n  const [latencyRangeEnd, setLatencyRangeEnd] = useState(props.config[\"latencyRangeEnd\"]);\n\n  const handleEndpointChange = (e) => {\n    setEndpoint(e.target.value);\n  }\n\n  const handleChangeRequests = (e) => {\n    setRequests(e.target.value);\n  }\n\n  const handleEnabledChange = (e) => {\n    setEnabled(e.target.value);\n  }\n\n  const handleBypassChange = (e) => {\n    setBypass(e.target.value);\n  }\n\n  const handleLevelChange = (e) => {\n    setLevel(e.target.value);\n  }\n\n  const handleLatencyRangeEndChange = (e) => {\n    setLatencyRangeEnd(e.target.value);\n  }\n\n  const handleLatencyRangeStartChange = (e) => {\n    setLatencyRangeStart(e.target.value);\n  }\n\n  const handleLatencySubmit = (event) => {\n    event.preventDefault();\n    var headers = {\n      'Authorization': 'Basic ' + localStorage.getItem('user'),\n      'Content-Type': 'application/json'\n    }\n    let url;\n    let data;\n    if(formType === \"initAssault\") {\n      url = new URL(props.baseUrl + '/services/chaosmonkey/assault')\n      data = JSON.stringify({\n        \"protocol\": protocol,\n        \"address\": address,\n        \"assaultType\": assaultType,\n        \"port\": port,\n        \"endpoint\": endpoint,\n        \"requests\": requests\n      });\n    } else if(formType === \"configAssault\") {\n      url = new URL(props.baseUrl + '/services/chaosmonkey');\n      data = JSON.stringify({\n        \"protocol\": protocol,\n        \"port\": port,\n        \"address\": address,\n        \"assaultType\": assaultType,\n        \"assaultConfig\": {\n          \"enabled\": enabled,\n          \"bypass\": bypass,\n          \"level\": level,\n          \"latencyRangeStart\": latencyRangeStart,\n          \"latencyRangeEnd\": latencyRangeEnd,\n        }\n      });\n    }\n\n    return fetch(url, {\n      method: 'POST',\n      body: data,\n      headers: headers\n    }).then(response => {\n      if(response.status >= 200 && response.status < 300) {\n        window.location.reload();\n      } else {\n        console.log(\"something went wrong\");\n      }\n    }).catch(err => err);\n  }\n\n\n  let formTitle = \"\"\n  let form = (\n    <div></div>\n  )\n\n  if(formType === \"initAssault\") {\n    formTitle = \"Trigger\"\n    form = (\n        <React.Fragment>\n              <Grid item xs={6}>\n                <TextField\n                  type=\"text\"\n                  fullWidth\n                  onChange={handleEndpointChange}\n                  variant=\"outlined\"\n                  label=\"endpoint\"\n                  margin=\"normal\"\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  type=\"number\"\n                  fullWidth\n                  onChange={handleChangeRequests}\n                  variant=\"outlined\"\n                  label=\"requests\"\n                  margin=\"normal\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  type=\"text\"\n                  variant=\"filled\"\n                  fullWidth\n                  label=\"assaultType\"\n                  disabled\n                  value={assaultType}\n                  inputProps={\n                    { readOnly: true, }\n                  }\n                  margin=\"normal\"\n                />\n              </Grid>\n              <Grid item xs={4}>\n                <TextField\n                  type=\"text\"\n                  variant=\"filled\"\n                  label=\"protcol\"\n                  fullWidth\n                  value={protocol}\n                  disabled\n                  inputProps={\n                    { readOnly: true, }\n                  }\n                  margin=\"normal\"\n                />\n              </Grid>\n              <Grid item xs={4}>\n                <TextField\n                  type=\"text\"\n                  variant=\"filled\"\n                  label=\"address\"\n                  fullWidth\n                  disabled\n                  value={address}\n                  inputProps={\n                    { readOnly: true, }\n                  }\n                  margin=\"normal\"\n                />\n                </Grid>\n                <Grid item xs={4}>\n                <TextField\n                  type=\"text\"\n                  variant=\"filled\"\n                  label=\"port\"\n                  fullWidth\n                  disabled\n                  value={port}\n                  inputProps={\n                    { readOnly: true, }\n                  }\n                  margin=\"normal\"\n                />\n              </Grid>\n            </React.Fragment>\n    )\n  } else if(formType === \"configAssault\") {\n    formTitle = \"Configuration\";\n    form = (\n      <React.Fragment>\n        <Grid item xs={12}>\n          <FormGroup row>\n            <FormControlLabel control={<Switch onChange={handleEnabledChange} defaultChecked={props.config[\"enabled\"]} color=\"primary\"/>} label=\"Enabled\" />\n            <FormControlLabel control={<Switch onChange={handleBypassChange} defaultChecked={props.config[\"bypass\"]} color=\"primary\"/>} label=\"Bypass\" />\n          </FormGroup>\n        </Grid>\n        <Grid item xs={4}>\n        <TextField\n          type=\"number\"\n          variant=\"outlined\"\n          fullWidth\n          required\n          onChange={handleLevelChange}\n          defaultValue={props.config[\"level\"]}\n          label=\"Level\"\n          margin=\"normal\"\n        />\n        </Grid>\n        <Grid item xs={4}>\n          <TextField\n            type=\"number\"\n            variant=\"outlined\"\n            fullWidth\n            defaultValue={props.config[\"latencyRangeStart\"]}\n            onChange={handleLatencyRangeStartChange}\n            required\n            label=\"latencyRangeStart\"\n            margin=\"normal\"\n          />\n        </Grid>\n        <Grid item xs={4}>\n          <TextField\n            type=\"number\"\n            variant=\"outlined\"\n            fullWidth\n            onChange={handleLatencyRangeEndChange}\n            defaultValue={props.config[\"latencyRangeEnd\"]}\n            required\n            label=\"latencyRangeEnd\"\n            margin=\"normal\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            type=\"text\"\n            variant=\"filled\"\n            fullWidth\n            label=\"assaultType\"\n            defaultValue={assaultType}\n            disabled\n            inputProps={\n              { readOnly: true, }\n            }\n            margin=\"normal\"\n          />\n        </Grid>\n        <Grid item xs={4}>\n          <TextField\n            type=\"text\"\n            variant=\"filled\"\n            label=\"protcol\"\n            fullWidth\n            disabled\n            value={protocol}\n            inputProps={\n              { readOnly: true, }\n            }\n            margin=\"normal\"\n          />\n        </Grid>\n        <Grid item xs={4}>\n          <TextField\n            type=\"text\"\n            variant=\"filled\"\n            label=\"address\"\n            fullWidth\n            disabled\n            value={address}\n            inputProps={\n              { readOnly: true, }\n            }\n            margin=\"normal\"\n          />\n          </Grid>\n          <Grid item xs={4}>\n          <TextField\n            type=\"text\"\n            variant=\"filled\"\n            label=\"port\"\n            disabled\n            fullWidth\n            value={port}\n            inputProps={\n              { readOnly: true, }\n            }\n            margin=\"normal\"\n          />\n        </Grid>\n      </React.Fragment>\n  )\n  }\n  let nullForm = Boolean(assaultType === \"\" || formType === \"\");\n  if(!nullForm) {\n    return (\n      <div>\n      <CssBaseline />\n      <form className={classes.form} noValidate onSubmit={handleLatencySubmit}>\n        <Paper style={{padding: 16}}>\n          <Grid\n            container\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            spacing={2}\n            direction=\"row\">\n            <Grid item xs={12} style={{padding: 0, margin: 0}}>\n              <Typography variant=\"h4\" component=\"h1\" align=\"left\" gutterBottom>\n                Latency Assault {formTitle} Form\n                <ChaosInfoPopper\n                formType={formType}\n                handlerName=\"Latency Assault Handler\"\n                />\n              </Typography>\n            </Grid>\n            {form}\n            <Grid item xs={3}>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n                >Go\n            </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n        </form>\n      </div>\n    );\n  } else {\n    return (<div></div>);\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport ChaosFormSettings from './chaos/ChaosFormSettings'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { useStyles } from './Constants'\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport KillAppForm from './chaos/KillAppForm'\nimport ExceptionForm from './chaos/ExceptionForm'\nimport MemoryForm from './chaos/MemoryForm'\nimport LatencyForm from './chaos/LatencyForm'\n\n\nexport default function ChaosMonkey(props) {\n  const {history} = props;\n  const protocol = props.location.state.data.protocol;\n  const address = props.location.state.data.address;\n  const port = props.location.state.data.port;\n  const baseUrl = props.location.state.data.baseUrl;\n\n  const chaosFormTypes = [\"initAssault\", \"configAssault\"];\n  const chaosFormTypeDisplays = [\"Initiate Assault\", \"Configure Assault\"];\n\n  const chaosAssaultTypes = [\"killApp\", \"exception\", \"memory\", \"latency\"];\n  const chaosAssaultTypeDisplays = [\"KillApp Assault Handler\", \"Exception Assault Handler\", \"Memory Assault Handler\", \"Latency Assault Handler\"];\n\n  const [chaosFormType, setChaosMonkeyFormType] = useState(\"\");\n  const [chaosAssaultType, setChaosMonkeyAssaultType] = useState(\"\");\n\n  const [chaosMonkeyGetData, setChaosMonkeyGetData] = useState(null);\n\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const headers = {'Authorization': 'Basic ' + localStorage.getItem('user')};\n\n  /* build query params */\n  console.log(baseUrl)\n  var url = new URL(baseUrl + '/services/chaosmonkey'),\n      params = {'protocol': protocol, 'port': port, 'address': address, 'serviceId': \"serviceId\", 'tag': \"tag\"};\n  Object.keys(params).forEach(key => url.searchParams.append(key, params[key]))\n\n\n  const handleAssaultChange = (newVal) => {\n    setChaosMonkeyAssaultType(newVal);\n  }\n\n  const handleFormTypeChange = (newVal) => {\n    setChaosMonkeyFormType(newVal);\n  }\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const fetchData = async () => {\n            setLoading(true);\n            try {\n                const response = await fetch(url, { headers, signal: abortController.signal });\n                if (!response.ok) {\n                    const data = await response.json();\n                    setLoading(false);\n                    if(data.code === 'ERR10002' || data.code === 'ERR10046' || data.code === 'ERR10047') {\n                        history.push({ pathname: '/login', state: { from: props.location } });\n                    } else {\n                        setError(data);\n                    }\n                } else {\n                    const data = await response.json();\n                    setChaosMonkeyGetData(data);\n                    setLoading(false);\n                }\n            } catch (e) {\n                if (!abortController.signal.aborted) {\n                    setLoading(false);\n                }\n            }\n        };\n\n    fetchData();\n\n    return () => {\n      abortController.abort();\n    }\n  }, []);\n\n\n\n  let activeForm;\n  if(chaosAssaultType === \"killApp\") {\n    activeForm = (\n        <KillAppForm\n          baseUrl={baseUrl}\n          config={chaosMonkeyGetData[\"com.networknt.chaos.KillappAssaultHandler\"]}\n          formType={chaosFormType}\n          protocol={protocol}\n          address={address}\n          port={port}\n        />\n    );\n  } else if(chaosAssaultType === \"exception\") {\n    activeForm = (\n      <ExceptionForm\n        baseUrl={baseUrl}\n        config={chaosMonkeyGetData[\"com.networknt.chaos.ExceptionAssaultHandler\"]}\n        formType={chaosFormType}\n        protocol={protocol}\n        address={address}\n        port={port}\n      />\n    );\n  } else if(chaosAssaultType === \"memory\") {\n    activeForm = (\n    <MemoryForm\n      baseUrl={baseUrl}\n      config={chaosMonkeyGetData[\"com.networknt.chaos.MemoryAssaultHandler\"]}\n      formType={chaosFormType}\n      protocol={protocol}\n      address={address}\n      port={port}\n    />\n  )\n} else if(chaosAssaultType === \"latency\") {\n    activeForm = (\n      <LatencyForm\n        baseUrl={baseUrl}\n        config={chaosMonkeyGetData[\"com.networknt.chaos.LatencyAssaultHandler\"]}\n        formType={chaosFormType}\n        protocol={protocol}\n        address={address}\n        port={port}\n      />\n    );\n  }\n\nif(loading) {\n  return (<div><CircularProgress /></div>)\n} else if(error) {\n  return (\n    <div>\n      <pre>{JSON.stringify(error, null, 2)}</pre>\n    </div>\n  )\n} else {\n  return(\n      <Paper style={{padding: 16, margin: 16}}>\n        <Grid\n          container\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          spacing={2}\n          direction=\"row\">\n            <CssBaseline />\n            <Grid item xs={6}>\n            <ChaosFormSettings\n              label=\"Assault Type\"\n              options={chaosAssaultTypes}\n              optionDisplays={chaosAssaultTypeDisplays}\n              value={chaosAssaultType}\n              onChange={handleAssaultChange}\n            />\n            </Grid>\n            <Grid item xs={6}>\n              <ChaosFormSettings\n                label=\"Form Type\"\n                options={chaosFormTypes}\n                optionDisplays={chaosFormTypeDisplays}\n                value={chaosFormType}\n                onChange={handleFormTypeChange}\n                />\n            </Grid>\n            <Grid item>\n              {activeForm}\n            </Grid>\n          </Grid>\n        </Paper>\n  )\n}\n}\n","import React, { useReducer, useContext } from \"react\";\n\nvar AppStateContext = React.createContext();\nvar AppDispatchContext = React.createContext();\n\nfunction appReducer(state, action) {\n  console.log(\"state = \", state);\n  console.log(\"action = \", action);\n  switch (action.type) {\n    case \"UPDATE_FILTER\":\n      return { ...state, filter: action.filter.toLowerCase() };\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\nfunction AppProvider({ children }) {\n  console.log(\"AppProvider is called...\");\n  var [state, dispatch] = useReducer(appReducer, {\n    filter: null\n  });\n\n  return (\n    <AppStateContext.Provider value={state}>\n      <AppDispatchContext.Provider value={dispatch}>\n        {children}\n      </AppDispatchContext.Provider>\n    </AppStateContext.Provider>\n  );\n}\n\nfunction useAppState() {\n  var context = useContext(AppStateContext);\n  if (context === undefined) {\n    throw new Error(\"useAppState must be used within a AppProvider\");\n  }\n  return context;\n}\n\nfunction useAppDispatch() {\n  var context = useContext(AppDispatchContext);\n  if (context === undefined) {\n    throw new Error(\"useAppDispatch must be used within a AppProvider\");\n  }\n  return context;\n}\n\nexport { AppProvider, useAppState, useAppDispatch };\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloudDoneIcon from '@material-ui/icons/CloudDone';\nimport HelpIcon from '@material-ui/icons/Help';\nimport PermDataSettingIcon from '@material-ui/icons/PermDataSetting';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport ChaosMonkey from './ChaosMonkey'\nimport './Dashboard.css';\nimport { useAppState } from \"../contexts/AppContext\";\n\nconst useRowStyles = makeStyles({\n    root: {\n        '& > *': {\n            borderBottom: 'unset',\n        },\n    },\n});\n\nfunction Dashboard(props) {\n    const {history} = props;\n    const [services, setServices] = useState(false);\n    const serviceIds = services ? Object.keys(services) : [];\n    const [error, setError] = useState(false);\n    const [loading, setLoading] = useState(true);\n    const { filter } = useAppState(false);\n    const filteredServiceIds = serviceIds.filter(serviceId => serviceId.toLowerCase().includes(filter) || !filter)\n    const url = '/services';\n    const headers = {'Authorization': 'Basic ' + localStorage.getItem('user')};\n\n    useEffect(() => {\n        const abortController = new AbortController();\n        const fetchData = async () => {\n            setLoading(true);\n            try {\n                const response = await fetch(url, { headers, signal: abortController.signal });\n                if (!response.ok) {\n                    const data = await response.json();\n                    setLoading(false);\n                    if(data.code === 'ERR10002' || data.code === 'ERR10046' || data.code === 'ERR10047') {\n                        history.push({ pathname: '/login', state: { from: props.location } });\n                    } else {\n                        setError(data);\n                    }\n                } else {\n                    const data = await response.json();\n                    setServices(data);\n                    setLoading(false);\n                }\n            } catch (e) {\n                if (!abortController.signal.aborted) {\n                    setLoading(false);\n                }\n            }\n        };\n\n        fetchData();\n\n        return () => {\n            abortController.abort();\n        };\n    }, []);\n\n    let wait;\n    if (loading) {\n        wait = (<div><CircularProgress /></div>);\n    } else if (error) {\n        wait = (\n            <div>\n                <pre>{JSON.stringify(error, null, 2)}</pre>\n            </div>\n        )\n    } else if (services) {\n        wait = (\n            <TableContainer component={Paper}>\n                <Table aria-label=\"collapsible table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell />\n                            <TableCell>Service Id</TableCell>\n                            <TableCell>Environment Tag</TableCell>\n                            <TableCell align=\"right\">Number of Nodes</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {filteredServiceIds.map((id, i) => (\n                            <Row key={i} history={props.history} id={id} nodes={services[id]} />\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        )\n    }\n    return (\n        <div className=\"App\">\n            {wait}\n        </div>\n    );\n}\n\nfunction Row(props) {\n    const { id, nodes, history } = props;\n    const [open, setOpen] = React.useState(false);\n    const classes = useRowStyles();\n    const words = id.split('|');\n    const serviceId = words[0];\n    const tag = words[1];\n\n    const handleCheck = (node) => {\n        const k = id + ':' + node.protocol + \":\" + node.address + ':' + node.port;\n        history.push({ pathname: '/check', state: { data: { id: k } } });\n    }\n\n    const handleLogger = (node) => {\n        history.push({ pathname: '/logger', state: { data: { node } } });\n    }\n\n    const handleInfo = (node) => {\n        const originUrl = (typeof window !== 'undefined') ? window.location.protocol + '//' + window.location.host : 'null';\n        const fullNode = node.address + ':' + node.port;\n        history.push({ pathname: '/info', state: {\n            data: {\n                node: fullNode,\n                protocol: node.protocol,\n                address: node.address,\n                port: node.port,\n                baseUrl: originUrl\n            }\n        }});\n    }\n\n    const handleChaosMonkey = (node) => {\n      const originUrl = (typeof window !== 'undefined') ? window.location.protocol + '//' + window.location.host : 'null';\n      history.push({\n        pathname: '/chaos', state: {\n          data: {\n            protocol: node.protocol,\n            address: node.address,\n            port: node.port,\n            baseUrl: originUrl,\n          }\n        }});\n    }\n\n    return (\n        <React.Fragment>\n            <TableRow className={classes.root}>\n                <TableCell>\n                    <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n                        {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n                    </IconButton>\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                    {serviceId}\n                </TableCell>\n                <TableCell>{tag}</TableCell>\n                <TableCell align=\"right\">{nodes.length}</TableCell>\n            </TableRow>\n            <TableRow>\n                <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                        <Box margin={1}>\n                            <Typography variant=\"h6\" gutterBottom component=\"div\">\n                                Nodes\n              </Typography>\n                            <Table size=\"small\" aria-label=\"purchases\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>Protocol</TableCell>\n                                        <TableCell>Address</TableCell>\n                                        <TableCell align=\"right\">Port</TableCell>\n                                        <TableCell align=\"right\">Status Check</TableCell>\n                                        <TableCell align=\"right\">Server Info</TableCell>\n                                        <TableCell align=\"right\">Logger Config</TableCell>\n                                        <TableCell align=\"right\">Chaos Monkey</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {nodes.map((node, j) => (\n                                        <TableRow key={j}>\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                {node.protocol}\n                                            </TableCell>\n                                            <TableCell>{node.address}</TableCell>\n                                            <TableCell align=\"right\">{node.port}</TableCell>\n                                            <TableCell align=\"right\">\n                                              <IconButton onClick={() => handleCheck(node)}>\n                                                <CloudDoneIcon />\n                                              </IconButton>\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                              <IconButton onClick={() => handleInfo(node)}>\n                                                <HelpIcon  />\n                                              </IconButton>\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                              <IconButton onClick={() => handleLogger(node)}>\n                                                <PermDataSettingIcon  />\n                                              </IconButton>\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                              <IconButton onClick={() => handleChaosMonkey(node)} >\n                                                <AssessmentIcon />\n                                              </IconButton>\n                                            </TableCell>\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </Box>\n                    </Collapse>\n                </TableCell>\n            </TableRow>\n        </React.Fragment>\n    );\n}\n\nexport default Dashboard;\n","import React, { useEffect, useState } from \"react\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nexport default function HealthCheck(props) {\n    console.log(props.location.state.data);\n    const id = props.location.state.data.id;\n\n    const [check, setCheck] = useState();\n    const [error, setError] = useState();\n    const [loading, setLoading] = useState(true);\n\n    const url = '/services/check/' + id;\n    const headers = {'Authorization': 'Basic ' + localStorage.getItem('user')};\n    useEffect(() => {\n        const abortController = new AbortController();\n        const fetchData = async () => {\n            setLoading(true);\n            try {\n                const response = await fetch(url, { headers, signal: abortController.signal });\n                if (!response.ok) {\n                    const data = await response.json();\n                    console.log(data);\n                    setError(data);\n                    setLoading(false);\n                } else {\n                    const data = await response.json();\n                    console.log(data);\n                    setCheck(data);\n                    setLoading(false);\n                }\n            } catch (e) {\n                if (!abortController.signal.aborted) {\n                    console.log(e);\n                    setLoading(false);\n                }\n            }\n        };\n\n        fetchData();\n\n        return () => {\n            abortController.abort();\n        };\n    }, []);\n\n    console.log(loading, check, error);\n\n    let wait;\n    if (loading) {\n        wait = <div><CircularProgress /></div>;\n    } else {\n        wait = (\n            <pre>{check ? JSON.stringify(check, null, 2) : error}</pre>\n        )\n    }\n\n    return (\n        <div>\n            {wait}\n        </div>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nexport default function ServerInfo(props) {\n\n    const node = props.location.state.data.node;\n    const protocol = props.location.state.data.protocol;\n    const address = props.location.state.data.address;\n    const port = props.location.state.data.port;\n    const baseUrl = props.location.state.data.baseUrl;\n\n    const [info, setInfo] = useState();\n    const [error, setError] = useState();\n    const [loading, setLoading] = useState(true);\n\n    /* build query params */\n    var url = new URL(baseUrl + '/services/info'),\n        params = {'protocol': protocol, 'port': port, 'address': address};\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]))\n\n    const headers = {'Authorization': 'Basic ' + localStorage.getItem('user')};\n\n    useEffect(() => {\n        const abortController = new AbortController();\n        const fetchData = async () => {\n            setLoading(true);\n            try {\n                const response = await fetch(\n                url,\n                {headers, signal: abortController.signal}\n                );\n                if (!response.ok) {\n                    const data = await response.json();\n                    setError(data);\n                    setLoading(false);\n                } else {\n                    const data = await response.json();\n                    setInfo(data);\n                    setLoading(false);\n                }\n            } catch (e) {\n                if (!abortController.signal.aborted) {\n                    console.log(e);\n                    setLoading(false);\n                }\n            }\n        };\n\n        fetchData();\n\n        return () => {\n            abortController.abort();\n        };\n    }, []);\n    let wait;\n    if (loading) {\n        wait = <div><CircularProgress /></div>;\n    } else {\n        wait = (<pre>{info ? JSON.stringify(info, null, 2) : error}</pre>)\n    }\n    return (\n        <div>\n            {wait}\n        </div>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n});\n\nexport default function LoggerConfig(props) {\n    const classes = useStyles();\n    console.log(props.location.state.data);\n    const node = props.location.state.data.node;\n    const [loggers, setLoggers] = useState([]);\n    const [error, setError] = useState();\n    const [loading, setLoading] = useState(true);\n\n    const handleLogger = () => {\n        console.log(node, loggers);\n        props.history.push({ pathname: '/form/loggerConfig', state: { data: { ...node, loggers } } });\n    }\n\n    const url = '/services/logger' + '?protocol=' + node.protocol + '&address=' + node.address + '&port=' + node.port;\n    const headers = { 'Authorization': 'Basic ' + localStorage.getItem('user') };\n    console.log(url);\n    useEffect(() => {\n        const abortController = new AbortController();\n        const fetchData = async () => {\n            setLoading(true);\n            try {\n                const response = await fetch(url, { headers, signal: abortController.signal });\n                if (!response.ok) {\n                    const data = await response.json();\n                    console.log(data);\n                    setError(data);\n                    setLoading(false);\n                } else {\n                    const data = await response.json();\n                    console.log(data);\n                    setLoggers(data);\n                    setLoading(false);\n                }\n            } catch (e) {\n                if (!abortController.signal.aborted) {\n                    console.log(e);\n                    setLoading(false);\n                }\n            }\n        };\n\n        fetchData();\n\n        return () => {\n            abortController.abort();\n        };\n    }, []);\n\n    console.log(loading, loggers, error);\n\n    let wait;\n    if (loading) {\n        wait = <div><CircularProgress /></div>;\n    } else if (loggers) {\n        wait = (\n            <>\n            <TableContainer component={Paper}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Name</TableCell>\n                            <TableCell align=\"right\">Level</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {loggers.map((logger) => (\n                            <TableRow key={logger.name}>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {logger.name}\n                                </TableCell>\n                                <TableCell align=\"right\">{logger.level}</TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <Button variant=\"contained\" color=\"primary\" onClick={e => handleLogger()}>Update Logger Level</Button>\n            </>\n        )\n\n    } else {\n        wait = (\n            <pre>{error}</pre>\n        )\n    }\n\n    return (\n        <div>\n            {wait}\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    error: {\n        color: '#ff0000',\n    },\n}));\n\nfunction ErrorMessage(props) {\n    const classes = useStyles();\n    return (\n        <div className={classes.error}  dangerouslySetInnerHTML={ createMarkup(props.error) } />\n    )\n}\n\nfunction createMarkup(error) {\n  return {__html: error};\n}\n\nexport default ErrorMessage;\n","export const userService = {\n    login,\n    logout\n};\n\nfunction login(username, password) {\n    // store user details and basic auth credentials in local storage \n    // to keep user logged in between page refreshes\n    let authdata = window.btoa(username + ':' + password);\n    localStorage.setItem('user', JSON.stringify(authdata));\n}\n\nfunction logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('user');\n}\n","import React, { useState } from \"react\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport ErrorMessage from './ErrorMessage';\nimport { userService } from '../services/user';\n\nconst useStyles = makeStyles(theme => ({\n    '@global': {\n        body: {\n            backgroundColor: theme.palette.common.white,\n        },\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    loginButtons: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    }\n}));\n\nexport default function Login(props) {\n    const classes = useStyles();\n\n    const [username, setUsername] = useState();\n    const [password, setPassword] = useState();\n    const [error, setError] = useState('');\n\n    const handleChangeUsername = e => {\n        setUsername(e.target.value)\n    };\n\n    const handleChangePassword = e => {\n        setPassword(e.target.value)\n    };\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        userService.login(username, password);\n        const { from } = props.location.state || { from : { pathname: '/'} };\n        props.history.push(from);\n    };\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                <ErrorMessage error={error} />\n                <form className={classes.form} noValidate onSubmit={handleSubmit}>\n                  <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"username\"\n                        label=\"Username\"\n                        name=\"username\"\n                        value={username}\n                        autoComplete=\"username\"\n                        autoFocus\n                        onChange={handleChangeUsername}\n                  />\n                  <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        value={password}\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"password\"\n                        onChange={handleChangePassword}\n                  />\n                  <Button\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className={classes.submit}\n                  >Sign In\n                  </Button>\n                </form>\n            </div>\n        </Container>\n    );\n\n}\n","import React from 'react';\nimport { alpha, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { useHistory, Link } from \"react-router-dom\";\nimport { userService } from '../services/user';\nimport { useAppDispatch } from \"../contexts/AppContext\";\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    link: {\n        textDecoration: 'none',\n        color: 'white'\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '20ch',\n        },\n    },\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n}));\n\nexport default function Header(props) {\n    console.log(props);\n    let history = useHistory();\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n    const isMenuOpen = Boolean(anchorEl);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n    const appDispatch = useAppDispatch();\n    const changeFilter = (e) => {\n      appDispatch({ type: \"UPDATE_FILTER\", filter: e.target.value }); \n    }\n  \n    const logout = () => {\n        handleMenuClose();\n        userService.logout();\n        history.push(\"/login\");\n    }\n    const handleProfileMenuOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMobileMenuClose = () => {\n        setMobileMoreAnchorEl(null);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        handleMobileMenuClose();\n    };\n\n    const handleMobileMenuOpen = (event) => {\n        setMobileMoreAnchorEl(event.currentTarget);\n    };\n\n    const menuId = 'primary-search-account-menu';\n    const renderMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n        >\n            {\n                localStorage.getItem('user') ? (\n                    <MenuItem onClick={logout}>Logout</MenuItem>\n                ) : null\n            }\n            {\n                !localStorage.getItem('user') ? (\n                    <MenuItem onClick={handleMenuClose}>Login</MenuItem>\n                ) : null\n            }\n        </Menu>\n    );\n\n    const mobileMenuId = 'primary-search-account-menu-mobile';\n    const renderMobileMenu = (\n        <Menu\n            anchorEl={mobileMoreAnchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMobileMenuOpen}\n            onClose={handleMobileMenuClose}\n        >\n            <MenuItem onClick={handleProfileMenuOpen}>\n                <IconButton\n                    aria-label=\"account of current user\"\n                    aria-controls=\"primary-search-account-menu\"\n                    aria-haspopup=\"true\"\n                    color=\"inherit\"\n                >\n                    <AccountCircle />\n                </IconButton>\n                <p>User</p>\n            </MenuItem>\n        </Menu>\n    );\n\n    return (\n        <div className={classes.grow}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        className={classes.menuButton}\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Link to=\"/\" className={classes.link}>\n                        <Typography className={classes.title} variant=\"h6\" noWrap>\n                            Control Panel\n                        </Typography>\n                    </Link>\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase\n                            placeholder=\"Search…\"\n                            onChange={changeFilter}\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            inputProps={{ 'aria-label': 'search' }}\n                        />\n                    </div>\n                    <div className={classes.grow} />\n                    <div className={classes.sectionDesktop}>\n                        <IconButton\n                            edge=\"end\"\n                            aria-label=\"account of current user\"\n                            aria-controls={menuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleProfileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <AccountCircle />\n                        </IconButton>\n                    </div>\n                    <div className={classes.sectionMobile}>\n                        <IconButton\n                            aria-label=\"show more\"\n                            aria-controls={mobileMenuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleMobileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <MoreIcon />\n                        </IconButton>\n                    </div>\n                </Toolbar>\n            </AppBar>\n            {renderMobileMenu}\n            {renderMenu}\n        </div>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport {SchemaForm, utils} from 'react-schema-form';\nimport RcSelect from \"react-schema-form-rc-select\";\nimport forms from '../data/forms';\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    progress: {\n        margin: theme.spacing(2),\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n});\n\nfunction Form(props) {\n    const [fetching, setFetching] = useState(false);\n    const [showErrors, setShowErrors]  = useState(false);\n    const [schema, setSchema] = useState(null);\n    const [form, setForm] = useState(null);\n    const [actions, setActions] = useState(null);\n    const [model, setModel] = useState({});\n\n    const mapper = {\n        \"rc-select\": RcSelect\n    };\n\n    const { classes } = props;\n\n    useEffect(() => {\n        console.log(props.match.params.formId);\n        let formData = forms[props.match.params.formId];\n        setSchema(formData.schema);\n        setForm(formData.form);\n        setActions(formData.actions);\n        console.log(\"state = \", props.location.state);\n        // must ensure that the model is an empty object to the cascade dropdown\n        setModel(props.location.state ? props.location.state.data || {} : formData.model || {});\n    }, [props.match.params.formId, props.location.state])\n\n    const onModelChange = (key, val, type) => {\n        utils.selectOrSet(key, model, val, type);\n        setModel({...model});  // here we must create a new object to force re-render.\n    };\n\n    function onButtonClick(action) {\n        console.log(\"onButtonClick is called\", action);\n        let validationResult = utils.validateBySchema(schema, model);\n        console.log(validationResult);\n        if(!validationResult.valid) {\n            setShowErrors(true);\n        } else {\n            console.log(\"model = \", model);\n            // submit the form to the portal service.\n            action.data = model;\n            // use the path defined in the action, default to /portal/command.\n            const url = action.path ? action.path : '/portal/command';\n            const headers = {\n                'Content-Type': 'application/json'\n            };\n            submitForm(url, headers, action);\n        }\n    };\n\n    const submitForm = async (url, headers, action) => {\n      setFetching(true);\n      try {\n        Object.assign(headers, { 'Authorization': 'Basic ' + localStorage.getItem('user') })\n        const response = await fetch(url, { method: action.method ? action.method : 'POST', body: action.rest ? JSON.stringify(action.data) : JSON.stringify(action), headers, credentials: 'include'});\n        // we have tried out best to response json from our APIs; however, some services return text instead like light-oauth2.\n        const s = await response.text();\n        console.log(\"submit error\", s);\n        const data = JSON.parse(s);\n        setFetching(false);\n        if (!response.ok) {\n            // code is not OK.\n            props.history.push({pathname: action.failure, state: { error: data }});  \n        } else {\n            props.history.push({pathname: action.success, state: { data }});\n        }\n      } catch (e) {\n        // network error here.\n        console.log(e);\n        // convert it to json as the failure component can only deal with JSON.\n        const error = { error: e };\n        props.history.push({pathname: action.failure, state: { error }});\n      }\n    };\n\n    if(schema) {\n        var buttons = [];\n        actions.map((item, index) => {\n            buttons.push(<Button variant=\"contained\" className={classes.button} color=\"primary\" key={index} onClick={e => onButtonClick(item)}>{item.title}</Button>)\n            return buttons;\n        });\n\n        let wait;\n        if(fetching) {\n            wait = <div><CircularProgress className={classes.progress} /></div>;\n        } else {\n            wait = <div></div>;\n        }\n        let title = <h2>{schema.title}</h2>\n        return (\n            <div>\n                {wait}\n                {title}\n                <SchemaForm schema={schema} form={form} model={model} mapper={mapper} showErrors={showErrors} onModelChange={onModelChange} />\n                {buttons}\n            </div>\n        )\n    } else {\n        return (<CircularProgress className={classes.progress} />);\n    }\n}\n\nexport default withStyles(styles)(Form);\n","import React from 'react';\n\nexport default function Failure(props) {\n\tconsole.log(\"props = \", props);\n\tconsole.log(\"error = \", props.location.state.error);\n\tconst error = props.location.state.error;\n    return (\n        <div>\n            <h2>Failure</h2>\n\t\t\t<pre>{ JSON.stringify(error, null, 2) }</pre>\n        </div>\n    );\n}\n","import React from 'react';\n\nexport default function Success(props) {\n\tconsole.log(\"props = \", props);\n\tconsole.log(\"data = \", props.location.state.data);\n\tconst data = props.location.state.data;\n    return (\n        <div>\n            <h2>Success</h2>\n            <pre>{ JSON.stringify(data, null, 2) }</pre>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Dashboard from \"./components/Dashboard\";\nimport HealthCheck from \"./components/HealthCheck\";\nimport ServerInfo from \"./components/ServerInfo\";\nimport LoggerConfig from \"./components/LoggerConfig\";\nimport ChaosMonkey from \"./components/ChaosMonkey\"\nimport Login from \"./components/Login\";\nimport Header from './components/Header';\nimport Form from \"./components/Form\";\nimport Failure from \"./components/Failure\";\nimport Success from \"./components/Success\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Header/>\n      <Switch>\n        <Route exact path=\"/\" component={Dashboard} />\n        <Route exact path=\"/form/:formId\" component={Form} />\n        <Route path=\"/check\" component={HealthCheck} />\n        <Route path=\"/info\" component={ServerInfo} />\n        <Route path=\"/chaos\" component={ChaosMonkey} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/logger\" component={LoggerConfig} />\n        <Route path=\"/failure\" component={Failure} />\n        <Route path=\"/success\" component={Success} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { AppProvider } from \"./contexts/AppContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n   \t<AppProvider>\n      <App />\n    </AppProvider>      \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}